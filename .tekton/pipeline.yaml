apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: cd-pipeline
spec:
  finally:
    - name: behave
      params:
        - name: base-url
          value: 'https://wishlist-wl955-dev.apps.rm2.thpm.p1.openshiftapps.com'
        - name: wait-seconds
          value: '60'
        - name: driver
          value: chrome
      taskRef:
        kind: Task
        name: behave
      workspaces:
        - name: source
          workspace: pipeline-workspace
  params:
    - description: The URL to the git repo
      name: GIT_REPO
      type: string
    - default: master
      description: The reference (branch or ref)
      name: GIT_REF
      type: string
    - default: wishlists
      description: Name of the application
      name: APP_NAME
      type: string
    - default: 'image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/$(params.APP_NAME):latest'
      description: The name of the image to build
      name: IMAGE_NAME
      type: string
  tasks:
    - name: git-clone-1-19-0
      params:
        - name: CRT_FILENAME
          value: ca-bundle.crt
        - name: HTTP_PROXY
          value: ''
        - name: HTTPS_PROXY
          value: ''
        - name: NO_PROXY
          value: ''
        - name: SUBDIRECTORY
          value: ''
        - name: USER_HOME
          value: /home/git
        - name: DELETE_EXISTING
          value: 'true'
        - name: VERBOSE
          value: 'false'
        - name: SSL_VERIFY
          value: 'false'
        - name: URL
          value: $(params.GIT_REPO)
        - name: REVISION
          value: $(params.GIT_REF)
        - name: REFSPEC
          value: ''
        - name: SUBMODULES
          value: 'true'
        - name: DEPTH
          value: '1'
        - name: SPARSE_CHECKOUT_DIRECTORIES
          value: ''
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: git-clone-1-19-0
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      workspaces:
        - name: output
          workspace: pipeline-workspace
    - name: pylint
      params:
        - name: image
          value: 'quay.io/rofrano/python:3.11-slim'
        - name: path
          value: .
        - name: args
          value: []
        - name: requirements-file
          value: requirements.txt
      runAfter:
        - git-clone-1-19-0
      taskRef:
        kind: Task
        name: pylint
      workspaces:
        - name: source
          workspace: pipeline-workspace
    - name: pytest-env
      params:
        - name: pytest-args
          value: []
        - name: secret-name
          value: postgres-creds
        - name: secret-key
          value: database_uri
      runAfter:
        - git-clone-1-19-0
      taskRef:
        kind: Task
        name: pytest-env
      workspaces:
        - name: source
          workspace: pipeline-workspace
    - name: buildah-1-19-0
      params:
        - name: IMAGE
          value: $(params.IMAGE_NAME)
        - name: DOCKERFILE
          value: ./Dockerfile
        - name: BUILD_ARGS
          value: []
        - name: CONTEXT
          value: .
        - name: STORAGE_DRIVER
          value: vfs
        - name: FORMAT
          value: oci
        - name: BUILD_EXTRA_ARGS
          value: ''
        - name: PUSH_EXTRA_ARGS
          value: ''
        - name: SKIP_PUSH
          value: 'false'
        - name: TLS_VERIFY
          value: 'true'
        - name: VERBOSE
          value: 'false'
      runAfter:
        - pylint
        - pytest-env
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: buildah-1-19-0
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      workspaces:
        - name: source
          workspace: pipeline-workspace
    - name: deploy-image
      params:
        - name: image-name
          value: $(params.IMAGE_NAME)
        - name: manifest-dir
          value: k8s
      runAfter:
        - buildah-1-19-0
      taskRef:
        kind: Task
        name: deploy-image
      workspaces:
        - name: source
          workspace: pipeline-workspace
  workspaces:
    - name: pipeline-workspace
